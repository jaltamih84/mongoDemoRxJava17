openapi: 3.0.3
info:
  title: Bank Account Service
  description: API to manage bank accounts.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /v1/accounts:
    get:
      summary: Get all accounts
      operationId: getAllAccounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/accounts/{id_account}:
    get:
      summary: Get an account by ID
      operationId: getAccountById
      parameters:
        - name: id_account
          in: path
          required: true
          description: Id of account
          schema:
            type: string
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an account by ID
      operationId: updateAccount
      parameters:
        - name: id_account
          in: path
          required: true
          description: Id of account
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '200':
          description: Account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an account by ID
      operationId: deleteAccount
      parameters:
        - name: id_account
          in: path
          required: true
          description: Id of account
          schema:
            type: string
      responses:
        '204':
          description: Account deleted
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/accounts/{id_account}/withdraw:
    post:
      summary: Make a withdraw from an account
      operationId: withdrawFromAccount
      parameters:
        - name: id_account
          in: path
          required: true
          description: Id of account
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Withdrawal made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Insufficient funds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/accounts/{id_account}/deposit:
    post:
      summary: Make a deposit to an account
      operationId: depositToAccount
      parameters:
        - name: id_account
          in: path
          required: true
          description: Id of account
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Deposit made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Insufficient deposit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/account/{id_account}/balances:
    get:
      summary: Get client balances
      operationId: getClientBalances
      parameters:
        - name: id_account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/account/{id_account}/transactions:
    get:
      summary: Get client transactions
      operationId: getClientTransactions
      parameters:
        - name: id_account
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Account:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          enum: [savings, checking, fixed term]
        balance:
          type: number
        openingDate:
          type: string
          format: date
        transactionLimit:
          type: number
        maintenanceFee:
          type: number
        clientId:
          type: string
        holders:
          type: array
          items:
            type: string
        authorizedSigners:
          type: array
          items:
            type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        balances:
          type: object
          properties:
            clientId:
              type: string
            creditBalance:
              type: number
            date:
              type: string
              format: date
    AccountRequest:
      type: object
      properties:
        type:
          type: string
          enum: [savings, checking, fixed term]
        balance:
          type: number
        openingDate:
          type: string
          format: date
        transactionLimit:
          type: number
        maintenanceFee:
          type: number
        clientId:
          type: string
      required:
        - type
        - balance
        - openingDate
        - clientId
    AccountResponse:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
          enum: [savings, checking, fixed term]
        balance:
          type: number
        openingDate:
          type: string
          format: date
        transactionLimit:
          type: number
        maintenanceFee:
          type: number
        clientId:
          type: string
        holders:
          type: array
          items:
            type: string
        authorizedSigners:
          type: array
          items:
            type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    Transaction:
      type: object
      properties:
        clientId:
          type: string
        type:
          type: string
          enum: [deposit, withdrawal]
        amount:
          type: number
        date:
          type: string
          format: date
        description:
          type: string
    TransactionRequest:
      type: object
      properties:
        amount:
          type: number
      required:
        - amount
    TransactionResponse:
      type: object
      properties:
        type:
          type: string
          enum: [deposit, withdrawal]
        amount:
          type: number
        date:
          type: string
          format: date
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    BalanceResponse:
      type: object
      properties:
        clientId:
          type: string
        accountBalance:
          type: number
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
